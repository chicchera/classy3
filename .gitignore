# local prg
.git/*
*.geany
bin/*
c_stats.geany
compiler_compat/*
conda-meta/*
dumb.py
etc/
include/*
lib/*
prg/.env
share/*
ssl/*
stats.db
temp.py
tmp.py
test.py
tonto.d/*
x86_64*/*
# *.ipynb
*.backup
prg/100_users
loops
*.lprof
*(copy*
**/config_.txt
# *._py
# *._*
test*.*
*.log
dic_part_*
es-100l-dic.txt
# **/*.gz
# **/*/
# _*.*
_*.py

# no need to backup
pickles/*
logs/*
DEADJOE
#reds2_notebooks/*

# from previos programs
.~fast-classify_2.ipynb
1.  SEE REDS2 CONDA ENV FOR MISSING BITS
2. OLD REDS2 DIRS/
3. OLD NOTEBOOKS/
.2. OLD REDS2 DIRS/
.3. OLD NOTEBOOKS/
classred/
classyred/
db_schema (OLD).sql
dummy.py
stats.ini.test

# copies
data_ops/get_dfr (another copy).py
data_ops/get_dfr (copy).py
data_ops/get_dfr (3rd copy).py

# Compressed files
*.gz
*.zip
*.7z

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Tests
tests/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
# .ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# MISC

.ipynb_checkpoints/
dist_metrics.pxd
prg/.ipynb_checkpoints/
prg/__praw.ini
prg/lang_es/
prg/unidecode
sample_lines.txt

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/
~/.classyred/classyred.db
_main (loguru)._py
.vscode/settings.json
.vscode/settings.json
db_utils/.vscode/settings.json
.vscode/settings.json
config/es-100l.txt
books/julia_test_1.txt
books/Yo el Supremo - Augusto Roa Bastos.txt
books/lista2
.vscode/bookmarks.json
